{"ast":null,"code":"import { countries } from '../../../datas/countriesData';\nexport default ((req, res) => {\n  const datafilter = [];\n  let reponse = [];\n  countries.forEach(donnee => datafilter.push(donnee.hotels));\n\n  for (let index = 0; index < countries.length - 1; index++) {\n    countries[index].hotels[index].id === parseInt(req.query.id) ? reponse.push(countries[index].hotels[index]) : \"\";\n  }\n\n  reponse.length ? res.status(200).json({\n    id: req.query.id,\n    name: 'haha'\n  }) : res.status(404).json({\n    message: `this details of id: ${req.query.id} does not exist`\n  });\n});","map":{"version":3,"sources":["C:/Users/eteka/AllofAfrica/pages/api/card/[id].js"],"names":["countries","req","res","datafilter","reponse","forEach","donnee","push","hotels","index","length","id","parseInt","query","status","json","name","message"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,8BAAxB;AAEA,gBAAe,CAACC,GAAD,EAAKC,GAAL,KAAa;AAG3B,QAAMC,UAAU,GAAG,EAAnB;AACE,MAAIC,OAAO,GAAG,EAAd;AAEAJ,EAAAA,SAAS,CAACK,OAAV,CAAkBC,MAAM,IAAIH,UAAU,CAACI,IAAX,CAAgBD,MAAM,CAACE,MAAvB,CAA5B;;AAEF,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGT,SAAS,CAACU,MAAV,GAAiB,CAA7C,EAAgDD,KAAK,EAArD,EAAyD;AAErDT,IAAAA,SAAS,CAACS,KAAD,CAAT,CAAiBD,MAAjB,CAAwBC,KAAxB,EAA+BE,EAA/B,KAAsCC,QAAQ,CAACX,GAAG,CAACY,KAAJ,CAAUF,EAAX,CAA9C,GAA8DP,OAAO,CAACG,IAAR,CAAaP,SAAS,CAACS,KAAD,CAAT,CAAiBD,MAAjB,CAAwBC,KAAxB,CAAb,CAA9D,GAA6G,EAA7G;AAEH;;AAGEL,EAAAA,OAAO,CAACM,MAAR,GAAiBR,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACJ,IAAAA,EAAE,EAACV,GAAG,CAACY,KAAJ,CAAUF,EAAd;AAAiBK,IAAAA,IAAI,EAAC;AAAtB,GAArB,CAAjB,GAAuEd,GAAG,CAACY,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACE,IAAAA,OAAO,EAAG,uBAAsBhB,GAAG,CAACY,KAAJ,CAAUF,EAAG;AAA9C,GAArB,CAAvE;AAKH,CApBD","sourcesContent":["import {countries} from '../../../datas/countriesData'\r\n\r\nexport default (req,res) => {\r\n   \r\n   \r\n const datafilter = [] \r\n   let reponse = []\r\n   \r\n   countries.forEach(donnee => datafilter.push(donnee.hotels))\r\n\r\n for (let index = 0; index < countries.length-1; index++) {\r\n     \r\n     countries[index].hotels[index].id === parseInt(req.query.id) ?reponse.push(countries[index].hotels[index]) : \"\" \r\n     \r\n }\r\n\r\n    \r\n    reponse.length?  res.status(200).json({id:req.query.id,name:'haha'}) : res.status(404).json({message: `this details of id: ${req.query.id} does not exist`})\r\n    \r\n   \r\n   \r\n        \r\n}"]},"metadata":{},"sourceType":"module"}