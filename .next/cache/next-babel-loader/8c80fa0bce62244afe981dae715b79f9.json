{"ast":null,"code":"import { countries } from '../../../datas/countriesData';\nexport default ((req, res) => {\n  const datafilter = [];\n  let rep = [];\n  let final_reponse;\n  countries.forEach(donnee => datafilter.push(donnee.hotels));\n  datafilter.forEach(el => el.map(child => rep.push(child)));\n  final_reponse = rep.filter(el => el.id === req.query.id);\n  final_reponse.length ? res.status(200).json({\n    id: req.query.id,\n    name: final_reponse[0].name,\n    datas: final_reponse\n  }) : res.status(404).json({\n    name: `this details of id: ${req.query.id} does not exist`\n  });\n});","map":{"version":3,"sources":["C:/Users/eteka/AllofAfrica/pages/api/card/[id].js"],"names":["countries","req","res","datafilter","rep","final_reponse","forEach","donnee","push","hotels","el","map","child","filter","id","query","length","status","json","name","datas"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,8BAAxB;AAEA,gBAAe,CAACC,GAAD,EAAKC,GAAL,KAAa;AAG3B,QAAMC,UAAU,GAAG,EAAnB;AACE,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,aAAJ;AAEAL,EAAAA,SAAS,CAACM,OAAV,CAAkBC,MAAM,IAAIJ,UAAU,CAACK,IAAX,CAAgBD,MAAM,CAACE,MAAvB,CAA5B;AAEEN,EAAAA,UAAU,CAACG,OAAX,CAAmBI,EAAE,IAAIA,EAAE,CAACC,GAAH,CAAOC,KAAK,IAAIR,GAAG,CAACI,IAAJ,CAASI,KAAT,CAAhB,CAAzB;AAEDP,EAAAA,aAAa,GAAGD,GAAG,CAACS,MAAJ,CAAWH,EAAE,IAAIA,EAAE,CAACI,EAAH,KAAUb,GAAG,CAACc,KAAJ,CAAUD,EAArC,CAAhB;AAGAT,EAAAA,aAAa,CAACW,MAAd,GAAwBd,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACJ,IAAAA,EAAE,EAACb,GAAG,CAACc,KAAJ,CAAUD,EAAd;AAAiBK,IAAAA,IAAI,EAACd,aAAa,CAAC,CAAD,CAAb,CAAiBc,IAAvC;AAA4CC,IAAAA,KAAK,EAACf;AAAlD,GAArB,CAAxB,GAAiHH,GAAG,CAACe,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,IAAI,EAAG,uBAAsBlB,GAAG,CAACc,KAAJ,CAAUD,EAAG;AAA3C,GAArB,CAAjH;AAKH,CAnBD","sourcesContent":["import {countries} from '../../../datas/countriesData'\r\n\r\nexport default (req,res) => {\r\n   \r\n   \r\n const datafilter = [] \r\n   let rep = [];\r\n   let final_reponse\r\n   \r\n   countries.forEach(donnee => datafilter.push(donnee.hotels))\r\n\r\n     datafilter.forEach(el => el.map(child => rep.push(child)))\r\n\r\n    final_reponse = rep.filter(el => el.id === req.query.id)\r\n\r\n    \r\n    final_reponse.length ?  res.status(200).json({id:req.query.id,name:final_reponse[0].name,datas:final_reponse}) : res.status(404).json({name: `this details of id: ${req.query.id} does not exist`})\r\n    \r\n   \r\n   \r\n        \r\n}"]},"metadata":{},"sourceType":"module"}